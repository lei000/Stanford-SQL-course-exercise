## Q1. Find the names of all reviewers who rated Gone with the Wind. 
select distinct name
from Reviewer, Rating, Movie
where Reviewer.rID=Rating.rID and Movie.mID=Rating.mID and title="Gone with the Wind"

## Q2. For any rating where the reviewer is the same as the director of the movie, return the reviewer name, movie title, and number of stars. 
select name, title, stars
from Reviewer, Movie, Rating
where Reviewer.rID=Rating.rID and Movie.mID=Rating.mID and director=name

## Q3. Return all reviewer names and movie names together in a single list, alphabetized. (Sorting by the first name of the reviewer and first word in the title is fine; no need for special processing on last names or removing "The".) 
select name 
from Reviewer
union
select title as name
from Movie
order by name

## Q4. Find the titles of all movies not reviewed by Chris Jackson. 
select title
from Movie
where mID not in (select mID from Rating where rID=(select rID from Reviewer where name = "Chris Jackson" ))

## Q5. For all pairs of reviewers such that both reviewers gave a rating to the same movie, return the names of both reviewers. Eliminate duplicates, don't pair reviewers with themselves, and include each pair only once. For each pair, return the names in the pair in alphabetical order. 
select p.name, q.name
from Reviewer p, Reviewer q, (
select distinct a.rID as rID1, b.rID as rID2
from Rating a, Rating b
where a.mID = b.mID)
where p.rID=rID1 and q.rID=rID2  and p.name < q.name

## Q6. For each rating that is the lowest (fewest stars) currently in the database, return the reviewer name, movie title, and number of stars. 
select name, title, stars
from Movie, Reviewer, (
select rID, mID, stars
from Rating
where stars= (select min(stars) from Rating) )as n
where Movie.mID=n.mID and Reviewer.rID=n.rID

## Q7. List movie titles and average ratings, from highest-rated to lowest-rated. If two or more movies have the same average rating, list them in alphabetical order. 
select title, ag
from Movie, (
select mID, avg(stars) as ag
from Rating
group by mID) as m
where Movie.mID=m.mID
order by ag desc, title

## Q8. Find the names of all reviewers who have contributed three or more ratings. (As an extra challenge, try writing the query without HAVING or without COUNT.) 
select name
from Reviewer
where rID in (select rID from Rating group by rID having count(*)>=3)

## Q9. Some directors directed more than one movie. For all such directors, return the titles of all movies directed by them, along with the director name. Sort by director name, then movie title. (As an extra challenge, try writing the query both with and without COUNT.) 
select title, director
from Movie
where director in (select director from Movie group by director having count(*) > 1 )
order by director, title

## Q10. Find the movie(s) with the highest average rating. Return the movie title(s) and average rating. (Hint: This query is more difficult to write in SQLite than other systems; you might think of it as finding the highest average rating and then choosing the movie(s) with that average rating.) 
select title, rating
from Movie, (select mID, avg(stars) as rating from Rating group by mID) as n
where Movie.mID=n.mID and rating=
(select max(rating) from (select mID, avg(stars) as rating from Rating group by mID))

## Q11. Find the movie(s) with the lowest average rating. Return the movie title(s) and average rating. (Hint: This query may be more difficult to write in SQLite than other systems; you might think of it as finding the lowest average rating and then choosing the movie(s) with that average rating.) 
select title, rating
from Movie, (select mID, avg(stars) as rating from Rating group by mID) as n
where Movie.mID=n.mID and rating=
(select min(rating) from (select mID, avg(stars) as rating from Rating group by mID))

## Q12. For each director, return the director's name together with the title(s) of the movie(s) they directed that received the highest rating among all of their movies, and the value of that rating. Ignore movies whose director is NULL. 
select director, title, max(stars)
from Movie, Rating
where Movie.mID=Rating.mID and director is not null
group by director
